openapi: 3.0.0

info:
  version: 1.0.0
  title: MIDISense
  description: "This is the API for the MIDISense System"

tags:
  - name: "Display"
  - name: "Interpreter"
  - name: "Intelligence"

paths:

  #=================================================
  # ENDPOINT DEFINITIONS
  #=================================================

  #============= INTERPRETER ============================

  /interpreter/processFile:
    post:
      summary: "API endpoint to process File"
      tags:
        - "Interpreter"
      description: ProcessFile
      operationId: ProcessFile
      requestBody:
        description: "Request body of processFile endpoint, request must be sent in
                      JSON and references interpreterProcessFileRequest in the schema"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interpreterProcessFileRequest'
      responses:
        '200':
          description: "Describes response of processFile endpoint, will respond if
                        successful and references interpreterProcessFileResponse"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interpreterProcessFileResponse'

  /display/getPieceMetadata:
    post:
      summary: "endpoint for getting the piece metadata"
      tags:
        - "Display"
      description: getPieceMetadata
      operationId: getPieceMetadata
      requestBody:
        description: "Request body of getPieceMetadata endpoint, request must be sent in
                      JSON and references displayGetPieceMetadataRequest in the schema"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/displayGetPieceMetadataRequest'
      responses:
        '200':
          description: "Describes response of getPieceMetadata endpoint, will respond if
                        successful and references displayGetPieceMetadataResponse"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/displayGetPieceMetadataResponse'


  /display/getTrackInfo:
    post:
      summary: "Endpoint for receiving the track info"
      tags:
        - "Display"
      description: getTrackInfo
      operationId: getTrackInfo
      requestBody:
        description: "Request body of getTrackInfo endpoint, request must be sent in
                      JSON and references displayGetTrackInfoRequest in the schema"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/displayGetTrackInfoRequest'
      responses:
        '200':
          description: "Describes response of getTrackInfo endpoint, will respond if
                        successful and references displayGetTrackInfoResponse"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/displayGetTrackInfoResponse'

  /display/getTrackMetadata:
    post:
      summary: "Endpoint for receiving the track metadata"
      tags:
        - "Display"
      description: getTrackMetadata
      operationId: getTrackMetadata
      requestBody:
        description: "Request body of getTrackMetadata endpoint, request must be sent in
                      JSON and references displayGetTrackMetadataRequest in the schema"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/displayGetTrackMetadataRequest'
      responses:
        '200':
          description: "Describes response of getTrackMetadata endpoint, will respond if
                        successful and references displayGetTrackMetadataResponse"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/displayGetTrackMetadataResponse'

  /display/getTrackOverview:
    post:
      summary: "Endpoint for getting the track overview"
      tags:
        - "Display"
      description: getTrackOverview
      operationId: getTrackOverview
      requestBody:
        description: "Request body of getTrackOverview endpoint, request must be sent in
                      JSON and references displayGetTrackOverviewRequest in the schema"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/displayGetTrackOverviewRequest'
      responses:
        '200':
          description: "Describes response of getTrackOverview endpoint, will respond if
                        successful and references displayGetTrackOverviewResponse"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/displayGetTrackOverviewResponse'

  /intelligence/analyseGenre:
    post:
      summary: "Endpoint for analysing the genre of midi file"
      tags:
        - "Intelligence"
      description: analyseGenre
      operationId: analyseGenre
      requestBody:
        description: "Request body of analyseGenre endpoint, request must be sent in
                      JSON and references intelligenceAnalyseGenreRequest in the schema"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/intelligenceAnalyseGenreRequest'
      responses:
        '200':
          description: "Describes response of analyseGenre endpoint, will respond if
                        successful and references intelligenceAnalyseGenreResponse"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/intelligenceAnalyseGenreResponse'


  #=================================================
  # SCHEMAS + OBJECTS
  #=================================================

components:
  schemas:

    interpreterUploadFileRequest:
      description: "Expects a byte array representation of a midi file"
      type: object
      properties:
        fileContents:
          type: array
          items:
            type: integer

    interpreterUploadFileResponse:
      description: "Returns a file designator UUID"
      type: object
      properties:
        fileDesignator:
          type: string
        success:
          type: boolean
        message:
          type: string

    interpreterProcessFileRequest:
      description: "Expects UUID file designator"
      type: object
      properties:
        fileDesignator:
          type: string

    interpreterProcessFileResponse:
      description: "Returns a success status boolean and message string"
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string

    displayGetPieceMetadataRequest:
      description: "Expects UUID file designator"
      type: object
      properties:
        fileDesignator:
          type: string

    displayGetPieceMetadataResponse:
      description: "Returns a TempoIndication, KeySignature and Time Signature in the form of an integer, string and object respectively"
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        tempoIndication:
          type: integer
        keySignature:
          type: string
        timeSignature:
          type: object
          properties:
            numBeats:
              type: integer
            beatValue:
              type: integer

    displayGetTrackInfoRequest:
      description: "Expects UUID file designator"
      type: object
      properties:
        fileDesignator:
          type: string

    displayGetTrackInfoResponse:
      description: "Returns a string hash map and track indices of the piece as integers"
      type: array
      items:
        type: object
        properties:
          index:
            type: integer
          trackName:
            type: string
          success:
            type: boolean
          message:
            type: string

    displayGetTrackMetadataRequest:
      description: "Expects UUID file designator and integer track index"
      type: object
      properties:
        fileDesignator:
          type: string
        trackIndex:
          type: integer

    displayGetTrackMetadataResponse:
      description: "Returns a string trackString"
      type: object
      properties:
        trackString:
          type: string
        success:
          type: boolean
        message:
          type: string

    displayGetTrackOverviewRequest:
      description: "Expects UUID file designator and integer track index"
      type: object
      properties:
        fileDesignator:
          type: string
        trackIndex:
          type: integer

    displayGetTrackOverviewResponse:
      description: "Returns a string of the pitch arrays"
      type: object
      properties:
        trackArray:
          type: array
          items:
            type: string
        success:
          type: boolean
        message:
          type: string


    intelligenceAnalyseGenreRequest:
      description: "Expects UUID file designator"
      type: object
      properties:
        fileDesignator:
          type: string

    intelligenceAnalyseGenreResponse:
      description: "Returns an array consisting of the most prevalent genres in the piece"
      type: object
      properties:
        genreArray:
          type: array
          items:
            type: object
            properties:
              Name:
                type: string
              Certainty:
                type: number
        success:
          type: boolean
        message:
          type: string